{"version":3,"sources":["components/imageResults/imageResults.js","components/search/Search.js","App.js","index.js"],"names":["ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageList","images","this","props","GridList","cols","map","title","tags","actionIcon","onClick","largeImageURL","color","src","alt","id","actions","label","primary","style","marginLeft","marginRight","marginTop","modal","onRequestClose","width","Component","Search","searchText","apiUrl","apiKey","onTextChange","e","val","target","value","name","axios","get","then","res","data","hits","catch","err","console","log","type","backgroundColor","paddingTop","paddingLeft","fontSize","borderTopStyle","borderRightStyle","borderLeftStyle","outline","borderBottomStyle","placeholder","onChange","length","App","ReactDOM","render","document","getElementById"],"mappings":"2TA0EeA,E,4MAjEXC,MAAQ,CACJC,MAAM,EACNC,WAAY,I,EAEhBC,WAAa,SAAAC,GACT,EAAKC,SAAS,CAAEJ,MAAM,EAAMC,WAAYE,K,EAE5CE,YAAc,WACV,EAAKD,SAAS,CAAEJ,MAAM,K,4CAE1B,WAAU,IAEFM,EAFC,OAGGC,EAAWC,KAAKC,MAAhBF,OAGJD,EADAC,EAEI,cAACG,EAAA,SAAD,CAAUC,KAAM,EAAhB,SAEQJ,EAAOK,KAAI,SAAAT,GAAG,OACV,cAAC,WAAD,CACIU,MAAOV,EAAIW,KAEXC,WACI,cAAC,IAAD,CAAYC,QAAS,kBAAM,EAAKd,WAAWC,EAAIc,gBAA/C,SACI,cAAC,IAAD,CAAQC,MAAM,YAL1B,SASI,qBAAKC,IAAKhB,EAAIc,cAAeG,IAAI,MAP5BjB,EAAIkB,SAiBjB,KAEhB,IAAMC,EAAU,CACZ,cAAC,IAAD,CAAYC,MAAM,QAAQC,SAAS,EAAMR,QAASR,KAAKH,eAE3D,OACI,sBAAKoB,MAAO,CAAEC,WAAY,GAAIC,YAAa,GAAIC,UAAW,IAA1D,UACKtB,EACD,cAAC,IAAD,CACIgB,QAASA,EACTO,OAAO,EACP7B,KAAMQ,KAAKT,MAAMC,KACjB8B,eAAgBtB,KAAKH,YAJzB,SAMI,qBAAKc,IAAKX,KAAKT,MAAME,WAAYmB,IAAI,GAAGK,MAAO,CAAEM,MAAO,mB,GAvDjDC,aCyDZC,E,4MA5DXlC,MAAQ,CACJmC,WAAY,GACZC,OAAQ,0BACRC,OAAQ,qCACR7B,OAAQ,I,EAEZ8B,aAAe,SAACC,GACZ,IAAMC,EAAMD,EAAEE,OAAOC,MACrB,EAAKrC,SAAL,eAAiBkC,EAAEE,OAAOE,KAAOH,IAAO,WACxB,KAARA,EACA,EAAKnC,SAAS,CAAEG,OAAQ,KAGxBoC,IACKC,IADL,UAEW,EAAK7C,MAAMoC,OAFtB,iBAEqC,EAAKpC,MAAMqC,OAFhD,cAE4D,EAAKrC,MAAMmC,WAFvE,sCAKKW,MAAK,SAAAC,GAAG,OAAI,EAAK1C,SAAS,CAAEG,OAAQuC,EAAIC,KAAKC,UAC7CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,U,4CAI1C,WAEI,OADAC,QAAQC,IAAI5C,KAAKT,MAAMQ,QAEnB,gCACI,uBAAO8C,KAAK,OACR5B,MACC,CACG6B,gBAAiB,QACjBpC,MAAO,QACPQ,WAAY,IACZE,UAAW,IACX2B,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,eAAgB,SAChBC,iBAAkB,SAClBC,gBAAiB,SACjBC,QAAS,OACTC,kBAAmB,UAIvBC,YAAY,oBACZrB,KAAK,aACLD,MAAOjC,KAAKT,MAAMmC,WAClB8B,SAAUxD,KAAK6B,eAEnB,uBACC7B,KAAKT,MAAMQ,OAAO0D,OAAS,EAAK,cAAC,EAAD,CAAc1D,OAAQC,KAAKT,MAAMQ,SAAc,Y,GApD3EyB,a,2BCcNkC,E,4JAXb,WACE,OACE,cAAC,IAAD,UACE,8BACE,cAAC,EAAD,Y,GALQlC,aCClBmC,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.fd72a48e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GridList, GridTile } from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nclass ImageResults extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        currentImg: ''\r\n    }\r\n    handleOpen = img => {\r\n        this.setState({ open: true, currentImg: img })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n    render() {\r\n\r\n        let imageList;\r\n        const { images } = this.props\r\n\r\n        if (images) {\r\n            imageList = (\r\n                <GridList cols={4}>\r\n                    {\r\n                        images.map(img => (\r\n                            <GridTile\r\n                                title={img.tags}\r\n                                key={img.id}\r\n                                actionIcon={\r\n                                    <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n                                        <ZoomIn color=\"white\" />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <img src={img.largeImageURL} alt=\"\" />\r\n                            </GridTile>\r\n                        ))\r\n                    }\r\n                </GridList>\r\n            )\r\n\r\n\r\n        }\r\n        else {\r\n            imageList = null;\r\n        }\r\n        const actions = [\r\n            <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\r\n        ]\r\n        return (\r\n            <div style={{ marginLeft: 50, marginRight: 50, marginTop: 20 }}>\r\n                {imageList}\r\n                <Dialog\r\n                    actions={actions}\r\n                    modal={false}\r\n                    open={this.state.open}\r\n                    onRequestClose={this.handleClose}\r\n                >\r\n                    <img src={this.state.currentImg} alt=\"\" style={{ width: '100%' }} />\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nImageResults.propTypes = {\r\n    images: PropTypes.array.isRequired\r\n}\r\n\r\n\r\nexport default ImageResults;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ImageResults from \"../imageResults/imageResults\";\r\nclass Search extends Component {\r\n    state = {\r\n        searchText: '',\r\n        apiUrl: 'https://pixabay.com/api',\r\n        apiKey: '20965487-272ee7d43eec1ef94f6e5dcc0',\r\n        images: []\r\n    };\r\n    onTextChange = (e) => {\r\n        const val = e.target.value;\r\n        this.setState({ [e.target.name]: val }, () => {\r\n            if (val === '') {\r\n                this.setState({ images: [] });\r\n            }\r\n            else {\r\n                axios\r\n                    .get(\r\n                        `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText\r\n                        }&image_type=photo&safesearch=true`\r\n                    )\r\n                    .then(res => this.setState({ images: res.data.hits }))\r\n                    .catch(err => console.log(err));\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        console.log(this.state.images);\r\n        return (\r\n            <div>\r\n                <input type=\"text\"\r\n                    style=\r\n                    {{\r\n                        backgroundColor: 'black',\r\n                        color: 'white',\r\n                        marginLeft: 570,\r\n                        marginTop: 100,\r\n                        paddingTop: 20,\r\n                        paddingLeft: 70,\r\n                        fontSize: 30,\r\n                        borderTopStyle: \"hidden\",\r\n                        borderRightStyle: \"hidden\",\r\n                        borderLeftStyle: \"hidden\",\r\n                        outline: \"none\",\r\n                        borderBottomStyle: \"groove\",\r\n\r\n\r\n                    }}\r\n                    placeholder=\"Search for images\"\r\n                    name=\"searchText\"\r\n                    value={this.state.searchText}\r\n                    onChange={this.onTextChange}\r\n                />\r\n                <br />\r\n                {this.state.images.length > 0 ? (<ImageResults images={this.state.images} />) : null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Search;","import React, { Component } from 'react';\nimport Search from \"./components/search/Search\";\nimport './App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n        <div>\n          <Search />\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n\n  <App />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}